# keyboards/client_keyboards.py

from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from database.db_supabase import Database
from datetime import datetime, timedelta
from typing import List


def get_client_main_keyboard():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–ª–∞–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–ª–∏–µ–Ω—Ç–∞."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥—É", callback_data="client_book"))
    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ –∫–Ω–æ–ø–∫–∏: "–ú–æ–∏ –∑–∞–ø–∏—Å–∏", "–ö–æ–Ω—Ç–∞–∫—Ç—ã"
    return builder.as_markup()


async def get_service_categories_keyboard(db: Database):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —É—Å–ª—É–≥ –∏–∑ –ë–î."""
    builder = InlineKeyboardBuilder()
    categories = await db.get_service_categories()
    for category in categories:
        builder.add(InlineKeyboardButton(text=category.title, callback_data=f"category_{category.id}"))
    builder.adjust(1)
    return builder.as_markup()


async def get_services_keyboard(db: Database, category_id: str):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É—Å–ª—É–≥–∞–º–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏."""
    builder = InlineKeyboardBuilder()
    services = await db.get_services_by_category(category_id)
    for service in services:
        builder.add(
            InlineKeyboardButton(text=f"{service.title} ({service.price} ‚ÇΩ)", callback_data=f"service_{service.id}"))
    builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º", callback_data="client_book"))
    builder.adjust(1)
    return builder.as_markup()


def get_date_keyboard():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ—Å—Ç—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–Ω—è."""
    builder = InlineKeyboardBuilder()
    today = datetime.now()
    builder.add(InlineKeyboardButton(text="–°–µ–≥–æ–¥–Ω—è", callback_data=f"date_{today.strftime('%Y-%m-%d')}"))
    builder.add(
        InlineKeyboardButton(text="–ó–∞–≤—Ç—Ä–∞", callback_data=f"date_{(today + timedelta(days=1)).strftime('%Y-%m-%d')}"))
    # –î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É aiogram-calendar
    return builder.as_markup()


def get_time_slots_keyboard(target_date: datetime, busy_slots: List[datetime]):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–≤–æ–±–æ–¥–Ω—ã–º–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Å–ª–æ—Ç–∞–º–∏.
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —É–∂–µ –∑–∞–Ω—è—Ç—ã—Ö —Å–ª–æ—Ç–æ–≤.
    """
    builder = InlineKeyboardBuilder()
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è –∏–∑ –æ–±—ä–µ–∫—Ç–æ–≤ datetime (–∏ –ø—Ä–∏–≤–æ–¥–∏–º –∫ –Ω—É–∂–Ω–æ–º—É —á–∞—Å–æ–≤–æ–º—É –ø–æ—è—Å—É, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    busy_times = [slot.astimezone().time() for slot in busy_slots]

    time_slots = []
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª–æ—Ç—ã —Å 9:00 –¥–æ 18:30
    for hour in range(9, 19):
        for minute in [0, 30]:
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—à–µ–¥—à–∏–µ —á–∞—Å—ã –¥–ª—è —Å–µ–≥–æ–¥–Ω—è
            if target_date.date() == datetime.now().date() and hour < datetime.now().hour:
                continue

            time_slot = datetime.strptime(f"{hour:02d}:{minute:02d}", "%H:%M").time()
            if time_slot not in busy_times:
                time_slots.append(time_slot)

    if not time_slots:
        builder.add(InlineKeyboardButton(text="‚ùå –ù–∞ —ç—Ç—É –¥–∞—Ç—É –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏", callback_data="no_slots"))
    else:
        for time_slot in time_slots:
            builder.add(InlineKeyboardButton(text=time_slot.strftime("%H:%M"),
                                             callback_data=f"time_{time_slot.strftime('%H:%M')}"))

    builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –¥–∞—Ç—ã", callback_data="back_to_date_choice"))
    builder.adjust(4)  # –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –ø–æ 4 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
    return builder.as_markup()


def get_confirmation_keyboard():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–º–µ–Ω—ã –∑–∞–ø–∏—Å–∏."""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–ø–∏—Å—å", callback_data="confirm_booking"))
    builder.add(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_booking"))
    return builder.as_markup()